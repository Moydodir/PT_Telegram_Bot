- name: "Install packages"
  apt:
    name: "{{ item }}"
    state: present
  loop: "{{ packages }}"

- name: "Access login postgres"
  lineinfile:
    path: "{{ path_hba }}"
    line: "host all all {{ hostvars[inventory_hostname]['ansible_host'] }}/32 trust"
    insertafter: EOF
    state: present
  notify:
    - Restart db

- name: "Create WAL directory"
  ansible.builtin.file:
    path: /data/WAL/archive/
    state: directory
    owner: postgres
    group: postgres


- name: "Set Postgres settings"
  community.postgresql.postgresql_set:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
  become_user: postgres
  with_dict: {archive_mode: "on", archive_command: "cp %p /data/WAL/archive/%f", max_wal_senders: 10, wal_level: replica, wal_log_hints: "on", listen_addresses: '*', port: "{{ PORT }}"}
  notify:
    - Restart db

- name: "Create Replicator"
  community.postgresql.postgresql_user:
    name: "{{ user_replication }}"
    password: "{{ password_replication }}"
    role_attr_flags: REPLICATION
    port: "{{ PORT }}"
  become_user: postgres

- name: "Create user"
  community.postgresql.postgresql_user:
    name: "{{ USER_NAME }}"
    password: "{{ PASSWORD_USER }}"
    port: "{{ PORT }}"
  become_user: postgres

- name: "Create DataBases"
  community.postgresql.postgresql_db:
    name: "{{ DB_NAME  }}"
    owner: "{{ USER_NAME }}"
    port: "{{ PORT }}"
  become_user: postgres

- name: "Create Table mail_address"
  community.postgresql.postgresql_table:
    db: "{{ DB_NAME }}"
    table: "mail_address"
    owner: "{{ USER_NAME }}"
    port: "{{ PORT }}"
    columns:
      - id SERIAL PRIMARY KEY
      - mail VARCHAR(500)
  become_user: postgres

- name: "Create Table phone_numbres"
  community.postgresql.postgresql_table:
    db: "{{ DB_NAME }}"
    table: "phone_numbres"
    owner: "{{ USER_NAME }}"
    port: "{{ PORT }}"
    columns:
      - id SERIAL PRIMARY KEY
      - phone VARCHAR(500)
  become_user: postgres

- name: "Replace pg_hba.conf"
  lineinfile:
    path: "{{ path_hba }}"
    regexp: "^host all all {{ hostvars[inventory_hostname]['ansible_host'] }}/32 trust$"
    line: "host replication {{ user_replication }} {{ ansible_repl_host }}/32 md5\nhost all all {{ hostvars[inventory_hostname]['ansible_host'] }}/32 password"
  notify:
    - Restart db

- name: "Flush handlers"
  meta: flush_handlers

- name: "Set permissions for other to read"
  file:
    path: "{{ path_hba }}"
    mode: "o+r"

- name: "Set permissions for other to read logs"
  file:
    path: "{{ path_log }}"
    mode: "o+r"
